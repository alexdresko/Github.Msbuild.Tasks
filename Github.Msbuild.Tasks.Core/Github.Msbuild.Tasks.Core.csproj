<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(SolutionDir)\.build</MSBuildCommunityTasksPath>
  </PropertyGroup>
  <Import Condition=" '$(SolutionDir)' != '' " Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{EE594299-6C9A-4ADF-B391-CD0B09863758}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Github.Msbuild</RootNamespace>
    <AssemblyName>Github.Msbuild.Tasks.Core</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\.debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\.release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Build.Engine" />
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Tasks.v4.0" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="Octokit">
      <HintPath>..\packages\Octokit.0.3.5\lib\net45\Octokit.dll</HintPath>
    </Reference>
    <Reference Include="RazorEngine">
      <HintPath>..\packages\RazorEngine.3.4.1\lib\net45\RazorEngine.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Web.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Microsoft.AspNet.Razor.3.0.0\lib\net45\System.Web.Razor.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core\GithubModel.cs" />
    <Compile Include="Core\Nuget.cs" />
    <Compile Include="Tasks\GetGithubModel.cs" />
    <Compile Include="Core\GitIt.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Core\ResourceFileLoader.cs" />
    <Compile Include="VersionInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Core\DefaultDescription.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="content\Github.Msbuild.Tasks.md" />
    <None Include="Github.Msbuild.Tasks.Core.nuspec" />
    <None Include="Github.Msbuild.Tasks.md" />
    <None Include="tools\Github.Msbuild.Tasks.targets">
      <SubType>Designer</SubType>
    </None>
    <None Include="packages.config" />
    <None Include="PostBuildScripts\BuildNewPackage-RanAutomatically.ps1" />
    <None Include="PostBuildScripts\New-NuGetPackage.ps1" />
    <None Include="PostBuildScripts\UploadPackage-RunManually.bat" />
    <None Include="PostBuildScripts\UploadPackage-RunManually.ps1" />
    <None Include="tools\install.ps1" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Core\DefaultReleaseNotes.txt" />
    <Content Include="PostBuildScripts\NuGet.exe" />
    <None Include="tools\MSBuild.psm1" />
    <None Include="VersionInfo.txt" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild">
    <Message Text="Forcing a clean" />
    <ItemGroup>
      <DirsToClean Include="$(TargetDir)" />
    </ItemGroup>
    <RemoveDir Directories="@(DirsToClean);bin\output" />
    <CallTarget Targets="Clean" />
    <Message Text="Setting the version" />
    <Version BuildType="Increment" RevisionType="None" Major="1" Minor="0" VersionFile="VersionInfo.txt">
      <Output TaskParameter="Major" PropertyName="Major" />
      <Output TaskParameter="Minor" PropertyName="Minor" />
      <Output TaskParameter="Build" PropertyName="Build" />
      <Output TaskParameter="Revision" PropertyName="Revision" />
    </Version>
    <Message Text="Version: $(Major).$(Minor).$(Build).$(Revision)" />
    <AssemblyInfo CodeLanguage="CS" OutputFile="$(MSBuildProjectDirectory)\VersionInfo.cs" AssemblyVersion="$(Major).$(Minor).$(Build)" AssemblyFileVersion="$(Major).$(Minor).$(Build)" />
  </Target>
  <PropertyGroup>
    <GithubMsbuildTasksPath>$(SolutionDir).build</GithubMsbuildTasksPath>
  </PropertyGroup>
  <Import Condition=" '$(SolutionDir)' != '' " Project="$(GithubMsbuildTasksPath)\Github.Msbuild.Tasks.Targets" />
  <Target Name="AfterBuild">
    <Message Text="$(GithubMsbuildTasksPath)" />
    <Message Text="$(GithubMsbuildTasksLib)" />
    <Message Text="Copying files" />
    <ItemGroup>
      <SourceFiles Include="$(TargetDir)\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(SourceFiles)" DestinationFolder="bin\output" />
    <Message Text="Testing Github.Msbuild.Tasks.Core" />
    <GetGithubModel />
    <Exec Command="PowerShell -NoProfile -ExecutionPolicy Bypass -Command &quot;&amp; '$(ProjectDir)PostBuildScripts\BuildNewPackage-RanAutomatically.ps1' -ProjectFilePath '$(ProjectPath)' -OutputDirectory '$(TargetDir)' -Configuration '$(ConfigurationName)' -VersionNumber '$(Major).$(Minor).$(Build)-prerelease' -Platform '$(PlatformName)'&quot;" />
  </Target>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
</Project>